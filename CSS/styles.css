/*
Colors used

Text Color (Dark Gray): #2b2b2b;
Primary color (Purple): #357b70;
Secondary Color (Orange): #e0b354;
*/
:root {
  --primary-color: #357b70;
  --secondary-color: #e0b354;
  --dark-grey: #2b2b2b;
}

a {
  color: var(--primary-color);
  transition: 0.2s;
}

.page-header {
  display: flex-end;
  align-items: center;
  width: 100%;
  padding: 20px;
}

.page-header_item {
  flex: 0 1 200px;
}

.page-header_item:last-child {
  flex-grow: 1;
  text-align: right;
}

.container {
  display: flex;
justify-content: center;
}

.profile_portrait {
  display: flex;
  justify-content: center;
  float: left;
  width: 250px;
  margin-right: 40px;
  border-radius: 50%;
}

.profile {
  max-width: 700px;
  margin: 0 auto;
}

* {
  box-sizing: border-box;
}

body {
  background-color: #F8F8FF;
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.6;
}

.grid-item {
  display: inline-block;
  width: 33%;
}

.grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 20px;
  margin: 0;
}

.grid-items {
  background-color: darkgray;
  width: auto;
  min-height: auto;
  margin: 0;
}

.grid-item:last-child {
  grid-column-start: 3;
  grid-row-start: 1;
  grid-row-end: 3;
}

h1 {
  font-size: 30px;
  font-weight: 700;
}

h2 {
  font-size: 24px;
  font-weight: 700;
}

h3 {
  font-size: 18px;
  font-weight: 700;
}

h1, h2, h3 {
  font-weight: var(--font-weight);
}

a {
  color: #357b70;
}

a:hover, A:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}

a:visited {
  /* visitedlink */
  color: #05676e;
}

a:active {
  color: #489c79;
}

button,
.button1,
.button2,
.button3,
.my-input {
  /* overwrites browswer defaults and resets the boarder */
  border:none;
  display: inline-block;
  /* takes the font from the outer contaner */
  font-family:inherit;
  /* styles the background color, font color, and text decoration (underline, etc) of the button */
  background-color: #357b70;
  color: white;
  text-decoration: none;
  /* adds spacing to the button (this will be discussed more in-depth later? */
  padding: 10px;
  border-radius: 3px;
  /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition: 0.2s opacity;
  }

button:hover,
button:focus,
.button:hover,
.button:focus {
  /* your styling goes here */
  cursor: pointer;
  opacity: 0.8;
}

  .button_secondary {
  background-color: #e0b354;
  color: #2b2b2b;
    }

@keyframes color-change {
  0% {
    fill: #edc655;
  }
  50% {
    fill: #fcffad;
  }
  100% {
    fill: #f76414;
  }
}

.sun {
  animation: 4s color-change infinite alternate linear;
}

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
}
to {
    transform: translate(100px, 48px);
   }
}

.cloud-front {
  animation: 30s cloud-move infinite alternate linear;
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

.navigation-list_item--active {
  text-decoration: none;
}

button:hover, button:focus {
  /* lets the mouse appear as a had when hovering over the button */
  cursor: pointer;
  /* reduces the oacity of the button to 80% */
  opacity: 0.8;
}

.center {
margin-left: auto;
margin-right: auto;
}

.page-footer {
  text-align: center;
  clear: both;
  display: flex;
  flex-direction: column;
  display: flex;
  justify-content: center;
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }
  .grid_item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}
